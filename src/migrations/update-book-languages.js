/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —è–∑—ã–∫–æ–≤ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–Ω–∏–≥–∞—Ö
 * 
 * –≠—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —è–∑—ã–∫–æ–º "“ö–∞–∑–∞“õ—à–∞" –Ω–∞ "–ö–∞–∑–∞—Ö—Å–∫–∏–π"
 * –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –º–æ–¥–µ–ª—å—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
const { Sequelize } = require('sequelize');

module.exports = {
  up: async (queryInterface, Sequelize) => {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —è–∑—ã–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ Books...');
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ —Å —è–∑—ã–∫–æ–º "“ö–∞–∑–∞“õ—à–∞"
      const books = await queryInterface.sequelize.query(
        "SELECT id, language FROM Books WHERE language = '“ö–∞–∑–∞“õ—à–∞'",
        { type: Sequelize.QueryTypes.SELECT }
      );
      
      console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${books.length} –∫–Ω–∏–≥ —Å —è–∑—ã–∫–æ–º "“ö–∞–∑–∞“õ—à–∞"`);
      
      if (books.length > 0) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —è–∑—ã–∫ –Ω–∞ "–ö–∞–∑–∞—Ö—Å–∫–∏–π"
        await queryInterface.sequelize.query(
          "UPDATE Books SET language = '–ö–∞–∑–∞—Ö—Å–∫–∏–π' WHERE language = '“ö–∞–∑–∞“õ—à–∞'",
          { type: Sequelize.QueryTypes.UPDATE }
        );
        
        console.log('‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∫–Ω–∏–≥');
      }
      
      // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º "English" –Ω–∞ "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" –µ—Å–ª–∏ –µ—Å—Ç—å
      const englishBooks = await queryInterface.sequelize.query(
        "SELECT id, language FROM Books WHERE language = 'English'",
        { type: Sequelize.QueryTypes.SELECT }
      );
      
      console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${englishBooks.length} –∫–Ω–∏–≥ —Å —è–∑—ã–∫–æ–º "English"`);
      
      if (englishBooks.length > 0) {
        await queryInterface.sequelize.query(
          "UPDATE Books SET language = '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π' WHERE language = 'English'",
          { type: Sequelize.QueryTypes.UPDATE }
        );
        
        console.log('‚úÖ –Ø–∑—ã–∫ "English" –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π"');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —è–∑—ã–∫–æ–≤:', error);
      throw error;
    }
  },

  down: async (queryInterface, Sequelize) => {
    console.log('üîÑ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π —è–∑—ã–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ Books...');
    
    try {
      // –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
      await queryInterface.sequelize.query(
        "UPDATE Books SET language = '“ö–∞–∑–∞“õ—à–∞' WHERE language = '–ö–∞–∑–∞—Ö—Å–∫–∏–π'",
        { type: Sequelize.QueryTypes.UPDATE }
      );
      
      await queryInterface.sequelize.query(
        "UPDATE Books SET language = 'English' WHERE language = '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'",
        { type: Sequelize.QueryTypes.UPDATE }
      );
      
      console.log('‚úÖ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:', error);
      throw error;
    }
  }
};